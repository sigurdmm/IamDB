/* eslint-disable no-undef */

/**
 * Reads a list of movie names from 1990 to 2015,
 * and searches for it in our search field.
 *
 * WARNING: Running this script will populate the database, and most likely invalidate your key for 24 hours.
 *          This is why the file is disabled by default. Enable it with care
 */

// http://it2810-20.idi.ntnu.no
const pageHost = process.env.CI_PAGE_HOST || 'http://localhost:3000';

const phrases = ['star', 'war', 'star wars', 'lord', 'hobbit', 'johny', 'harry potter', 'harry', 'interstellar', 'babe', 'halal', 'olsen', 'king', 'crown'];



describe('Build Search db', () => {
  let polyfill;
  let movies = [];

  // grab fetch polyfill from remote URL, could be also from a local package
  before(() => {
    // cy.readFile('cypress/support/1990-2015-movie-titles.txt')
    //   .then(data => {
    //     movies = data.split('\n').reverse().filter(name => name.length > 0).map(name => name.trim());
    //   });
    //
    // const polyfillUrl = 'https://unpkg.com/unfetch/dist/unfetch.umd.js';
    //
    // cy
    //   .request(polyfillUrl)
    //   .then((response) => {
    //     polyfill = response.body
    //   });
  });

  beforeEach(() => {
    // cy.visit(pageHost, {
    //   onBeforeLoad (win) {
    //     delete win.fetch;
    //     // since the application code does not ship with a polyfill
    //     // load a polyfilled "fetch" from the test
    //     win.eval(polyfill);
    //
    //     win.fetch = win.unfetch;
    //   }
    // });
  });

  it('should search many pages', () => {
    // for (let name of movies) {
    //   cy.get('.searchbar').find('input').clear().type(name);
    //
    //   cy.get('.searchbar').submit();
    //   cy.wait(2000);
    // }

  });
});
