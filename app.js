const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');

const app = express();

/**
 * Define middleware
 * */

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

// Resource folder which can be used by the API.
app.use('/resources', express.static(path.join(__dirname, 'public')));

// Serve static files for the front-end project.
// This folder should not be used by the server, as the build file is autogenerated
app.use('/static', express.static(path.join(__dirname, 'client/build/static')));

/**
 * Define Routes
 * */

// Api handler
app.use('/graphql', require('./routes/api.js'));

app.all('/*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build/index.html'));
});

// Catch general 404 errors
app.use((req, res, next) => next(createError(404)));

/**
 * Catches all errors, and builds an appropriate
 * response
 * */
// eslint-disable-next-line no-unused-vars
app.use((err, req, res, next) => {
  // set locals, only providing error in development
  const data = {};

  data.message = err.message;
  data.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.send(data);
});

module.exports = app;
