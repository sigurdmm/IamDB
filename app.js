const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const mongoose = require('mongoose');

const app = express();

/**
 * Define middleware
 * */

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

// Resource folder which can be used by the API.
app.use('/resources', express.static(path.join(__dirname, 'public')));

// Serve static files for the front-end project.
// This folder should not be used by the server, as the build file is autogenerated
app.use('/static', express.static(path.join(__dirname, 'client/build/static')));

const db = mongoose.connection;

db.on('error', console.error.bind(console, 'Connection error:'));
db.on('open', () => {
  console.info('Database connection established!');
});

mongoose.connect('mongodb://mongo/media-searcher');

/**
 * Define Routes
 * */

app.get('/api/v1/media/:id', (req, res) => {
  const { id } = req.params;

  if (id !== '1') {
    res.status(404).send({
      error: `Cannot find media with id ${id}`
    });
    return;
  }

  res.send({
    id,
    name: 'The Shawshank Redemption',
    description: 'Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.',
    rating: 9.3,
    // 14 October 1994, in unix timestamp
    released: 782136617,
    actors: ['Tim Robbins', 'Morgan Freeman', 'Bob Gunton'],
    director: 'Frank Darabont',
    thumbnails: {
      small: 'https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_UX182_CR0,0,182,268_AL_.jpg',
      large: null
    },
    type: 'movie'
  });
});

// Api handler
app.use('/graphql', require('./routes/api.js'));

app.all('/*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build/index.html'));
});

// Catch general 404 errors
app.use((req, res, next) => next(createError(404)));

/**
 * Catches all errors, and builds an appropriate
 * response
 * */
// eslint-disable-next-line no-unused-vars
app.use((err, req, res, next) => {
  // set locals, only providing error in development
  const data = {};

  data.message = err.message;
  data.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.send(data);
});

module.exports = app;
